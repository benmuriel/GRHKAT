@model GRH_4WEB.Models.PositionTemporaireViewModel
@{
    Layout = "~/Areas/PositionTemporaire/Views/Shared/_HomeLayout.cshtml";
    ViewBag.Title = "Positions Temporaires";
}

<div class="container">
    <div class="card">
        <div class="card-header">

            <h5 class="card-title">
                @(Model.situation_id == 0 ? "Creation" : "Edition") - Position temporaire
                <span class="float-right">
                    @ViewBag.str
                </span>
            </h5>
        </div>
        <div class="card-content p-2">
            @using (Html.BeginForm("Save", "Position", new { area = "PositionTemporaire", str = ViewBag.str.id }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.situation_id)
                @Html.HiddenFor(model => model.type_position_id)
                <div class="row">
                    <div class="col-5">
                        <div class="form-group row">
                            <label class="col-form-label col-md-3">Agent<span>*</span></label>
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.agent_id, new SelectList(DATACCESS.ModuleAgent.AgentLoadByStr(Convert.ToInt16(ViewBag.str.id), null), "agent_id", "nom_complet"),
                               new { href = @Url.Action("ProfilSynthese", "Home", new { id = 0, area = "ProfilAgent" }) })
                                <div class="fg-red">
                                    @Html.ValidationMessageFor(model => model.agent_id)
                                </div>
                                <div class="m-2" id="synthese"> dsdsd </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-7">
                        <div class="form-group row">
                            <label for="poste_id" class="col-form-label col-md-3">Type de position <span>*</span></label>
                            <div class="col-md-6">
                                <input id="typePdisplay" type="text" name="designation" value="@Model.designation" dataurl="@Url.Action("PositionDuree","Position",new {area="PositionTemporaire", id ="00",type_position_id = Model.type_position_id })" readonly />

                            </div>
                            <div class="col-md-3 text-center">
                                <div class="text-bold mb-1">Durée maximale :</div>
                                <output id="lblDuree">0</output> <span>jour(s)</span>
                            </div>
                        </div>
                     
                        @if (Model.has_poste)
                        {
                            <div class="form-group row">
                                <label for="poste_id" class="col-form-label col-md-3">Poste vacant <span>*</span></label>
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.poste_id, new SelectList(DATACCESS.ModulePlanning.PosteVacantLoad(null, null), "id", "fullName"))
                                </div>
                            </div>
                        }
                        @if (Model.has_institution)
                        {
                            <div class="form-group row">
                                <label for="poste_id" class="col-form-label col-md-3">Institution de détachement <span>*</span></label>
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.institution_detachement_id, new SelectList(DATACCESS.ModulePlanning.InstitutionDetachementLoad(), "id", "designation"))
                                </div>
                            </div>
                        }

                        <div class="form-group row">
                            <label class="col-form-label col-md-3">Durée de la position<span>*</span></label>
                            <div class="col-md-4">
                                <input type="range" value="@Model.duree" id="duree" name="duree"
                                       oninput="lblduree.value=duree.value" />
                            </div>
                            <div class="col-md-3 text-center">
                                <output class="text-bold" id="lblduree">0</output> <span>jour(s)</span>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-md-3">Date de debut <span>*</span></label>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.started_at, new { htmlAttributes = new { @readonly = "readonly" } })
                                <div class="fg-red">
                                    @Html.ValidationMessageFor(model => model.started_at)
                                </div>
                            </div>
                            <div class="col-1">
                                @{ Html.RenderPartial("~/Views/Shared/_datepicker.cshtml", "started_at"); }
                            </div>
                            <label class="col-form-label col-md-2">Date de fin<span>*</span></label>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.ended_at, new { htmlAttributes = new { @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="row mt-2 mb-2">
                            <label class="col-form-label col-md-3">Adresse durant la position</label>
                            <div class="col-4">
                                @Html.TextAreaFor(model => model.lieu_position_adresse)
                            </div>
                            <label class="col-form-label col-md-2">Autres details</label>
                            <div class="col-3">
                                @Html.TextAreaFor(model => model.details)
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-form-label col-md-3">Référence <span>*</span></label>
                            <div class="col-md-6">
                                @Html.TextAreaFor(model => model.reference)
                                <div class="fg-red">
                                    @Html.ValidationMessageFor(model => model.reference)
                                </div>
                            </div>
                        </div>
                        <div class="text-right m-3">
                            <button type="submit" class="button outline success">  Enregister</button>
                            <a href="@Url.Action("Index","Home", new { area= "PositionTemporaire", id = (Model.situation_id == 0? Model.type_position_id:-2) , str = (Model.situation_id == 0? ViewBag.str.id:0)  })" class="button">  Annuler  </a>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>


@section scripts{
    <script>
        function getDureeConfig() {
            var element = $('#typePdisplay');
            var url = element.attr("dataurl");
            var spnDuree = $('#duree');
            var lblDuree = $('#lblDuree');
            var lblduree = $('#lblduree');
            var agent_id = $('#agent_id').val()
            $.ajax({
                method: "GET",
                url: url.replace(agent_id)
            }).then(function (result) {
                spnDuree.attr('min', result.minday);
                spnDuree.attr('max', result.maxday);
                spnDuree.val(result.minday);
                lblduree.text(result.minday);
                lblDuree.text(result.maxday);
                $('#duree').click();
            }, function (data) {
                console.log(data)
            })
        };
        $('#agent_id').change(function () {
            var val = $(this).val();
            var pan = $('#synthese')
            var url = $(this).attr('href')
            url = url.replace("0", val)

            if (!Number.isNaN(val)) {
                console.log("inter")
                $.ajax({
                    method: "GET",
                    url: url
                }).then(
                    function (response) {

                        pan.html(response)
                    },
                    function (xhr) {
                        pan.html(xhr)
                    })
            }
            getDureeConfig()
        });

        $('#duree').click(function () {
            var end_date = $('#ended_at');
            var val = $(this).val();
            var startdat = $('#started_at').val();
            if (startdat === '') {
                end_date.val("No start date !");
                end_date.removeClass('fg-green')
                end_date.addClass('fg-red')
                return;
            }
            if (val == 0) {
                end_date.val("durée indéterminée");
                end_date.removeClass('fg-green')
                end_date.addClass('fg-red')
            }
            else {
                var dt = startdat.split('/');
                var date = new Date(dt[2], dt[1] - 1, dt[0]);
                date.setDate((date.getDate() + (val * 1) + 1))
                end_date.val(formatDate(date));
                end_date.removeClass('fg-red')
                end_date.addClass('fg-green')
            }
        });
        $('#started_at').change(function () {
            $('#duree').click()
        });
        $('#agent_id').change();
          //

    </script>
}

